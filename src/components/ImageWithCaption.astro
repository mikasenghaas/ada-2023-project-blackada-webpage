---
import { Image } from 'astro:assets';

const { id, src, alt, caption } = Astro.props;
---

<div class="my-12 w-full">
  <Image id={id} src={src} class="w-full" alt={alt} width={800} height={400} />
  <p class="text-sm italic">{caption}</p>
</div>

<script define:vars={{ id, src }}>
  // Function to update image based on dark attribute
  function updateImage() {
    const image = document.getElementById(id);
    if (document.documentElement.classList.contains('dark')) {
      const [path, suffix] = src.split('.');
      image.src = `${path}_dark.${suffix}`;
    } else {
      image.src = src;
    }
  }

  // Create an observer to watch for changes in the 'dark' attribute
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (mutation.attributeName === 'class' || mutation.attributeName === 'dark') {
        updateImage(); // Update the image when an attribute changes
      }
    });
  });

  // Start observing the document element for attribute changes
  observer.observe(document.documentElement, {
    attributes: true, //configure it to listen to attribute changes
  });

  // Initial check
  document.addEventListener('DOMContentLoaded', updateImage);
</script>
